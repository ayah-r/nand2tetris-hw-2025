// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:
    //negating x part
    Mux16(a= x, b= false, sel= zx, out= x1);
    Not16(in= x1, out= nex);
    Mux16(a= x1, b= nex, sel= nx, out=x2);

    //negating y part
    Mux16(a= y, b= false, sel= zy, out= y1);
    Not16(in= y1, out= ney);
    Mux16(a= y1, b= ney, sel= ny, out= y2);

    //x+y or x&y
    Add16(a = x2, b = y2, out = add);
    And16(a= x2, b= y2, out= multi);
    Mux16(a= multi, b= add, sel= f, out= r);

    //if no then out=!out
    Not16(in= r, out= ner);
    Mux16(a= r, b= ner, sel= no, out= out);

    //if out==zr
    //I'm sorry I tried my best but it doesnt work
    Or(a= r[0], b= r[1], out= or1);         
    Or(a= r[2], b= r[3], out= or2);        
    Or(a= r[4], b= r[5], out= or3);         
    Or(a= r[6], b= r[7], out= or4);
    Or(a= r[8], b= r[9], out= or5);
    Or(a= r[10], b= r[11], out= or6);
    Or(a= r[12], b= r[13], out= or7);
    Or(a= r[14], b= r[15], out= or8);      
    Or(a= or1, b= or2, out= or9);              
    Or(a= or3, b= or4, out= or10);
    Or(a= or5, b= or6, out= or11);
    Or(a= or7, b= or8, out= or12);
    Or(a= or9, b= or10, out= or13);             
    Or(a= or11, b= or12, out= or14);           
    Or(a= or13, b= or14, out= notzr);           
    Not(in= notzr, out= zr);                    
    //zr = 1 if r == 0, else 0

    //if out ==ng
    And(a= r[15], b= true, out= ng);         
}








